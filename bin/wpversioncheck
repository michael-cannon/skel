#!/bin/bash

# Check WordPress plugins for release version
#
# @author Michael Cannon <mc@aihr.us>

source ~/.skel/bin/wpinit ${@}
echo

if [[ -z ${2} ]]
then
	echo `basename ${0}` plugin-key version-number
	echo
	exit 1
fi

FILES_VALID=1
PLUGIN_DIR="${SITE_WP_PLUGINS}/${PLUGIN}/"
VERSION=${2}

if [[ -z ${SLUG} ]]
then
	SLUG=`echo ${1} | tr '[:lower:]' '[:upper:]'`
fi


# if [[ -n ${IS_PREMIUM} && ${IS_PREMIUM} -gt 0 ]]
# then
# 	file_name="README.md"
# else
	file_name="readme.txt"
# fi

file_path="${PLUGIN_DIR}/${file_name}"
source_text=`head ${file_path}`
wp_tested_up_to="Tested up to:"
wp_version_tag="${wp_tested_up_to} ${WP_VERSION}"
if echo "${source_text}" | grep -q "${wp_version_tag}";
then
	echo "GOOD ${file_name} contains '${wp_version_tag}'"
else
	FILES_VALID=0
	contains=`grep "${wp_tested_up_to}" ${file_path}`
	echo "WARNING ${file_name} doesn't contain '${wp_version_tag}', it states '${contains}'"
fi


version_tag="Stable tag: ${VERSION}"
if echo "${source_text}" | grep -q "${version_tag}";
then
	echo "GOOD ${file_name} contains '${version_tag}'"
else
	FILES_VALID=0
	echo "BAD ${file_name} doesn't contain '${version_tag}'"
fi


file_name="${PLUGIN}.php"
source_text=`head -n 75 ${PLUGIN_DIR}/${file_name}`
version_tag="Version: ${VERSION}"
if echo "${source_text}" | grep -q "${version_tag}";
then
	echo "GOOD ${file_name} contains '${version_tag}'"
else
	FILES_VALID=0
	echo "BAD ${file_name} doesn't contain '${version_tag}'"
fi


version_okay=0
version_tag="= '${VERSION}';"
if echo "${source_text}" | grep -q "${version_tag}";
then
	version_okay=1
	echo "GOOD ${file_name} contains '${version_tag}'"
else
	echo "WARNING ${file_name} doesn't contain '${version_tag}'"
fi

version_tag="${SLUG}_VERSION', '${VERSION}' );"
if echo "${source_text}" | grep -q "${version_tag}";
then
	version_okay=1
	echo "GOOD ${file_name} contains '${version_tag}'"
else
	FILES_VALID=0
	echo "WARNING ${file_name} doesn't contain '${version_tag}'"
fi

if [[ 0 == ${version_okay} ]]
then
	FILES_VALID=0
	echo "BAD ${file_name} doesn't contain version information'"
fi


aihr_version_tag="${SLUG}_AIHR_VERSION', '${AIHR_VERSION}' );"
if echo "${source_text}" | grep -q "${aihr_version_tag}";
then
	echo "GOOD ${file_name} contains '${aihr_version_tag}'"
elif [[ -n ${IS_PREMIUM} && ${IS_PREMIUM} -gt 0 ]]
then
	echo "WARNING ${file_name} doesn't contain '${aihr_version_tag}'"
else
	# FILES_VALID=0
	# echo "BAD ${file_name} doesn't contain '${aihr_version_tag}'"
	echo "WARNING ${file_name} doesn't contain '${aihr_version_tag}'"
fi


if [[ "${file_name}" =~ .*-premium.* ]]
then
	echo "CHECK"
	echo "${source_text}" | grep "${SLUG}_REQ_VERSION";
fi

file_name="changelog.txt"
file="${PLUGIN_DIR}/${file_name}"
if [[ -e ${file} ]]
then
	version_tag="= ${VERSION} ="
else
	file_name="CHANGELOG.md"
	file="${PLUGIN_DIR}/${file_name}"

	if [[ -e ${file} ]]
	then
		version_tag="## ${VERSION}"
	fi
fi

source_text=`head ${file}`
if echo "${source_text}" | grep -q "${version_tag}";
then
	echo "GOOD ${file_name} contains '${version_tag}'"
else
	FILES_VALID=0
	echo "BAD ${file_name} doesn't contain '${version_tag}'"
fi

echo

if [[ 0 == ${FILES_VALID} ]]
then
	exit 1
fi
