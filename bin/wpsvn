#!/bin/bash

# Prepare free WordPress plugin for release
#
# @author Michael Cannon <mc@aihr.us>

if [[ -z ${1} || -z ${2} ]]
then
	echo `basename ${0}` plugin-key version-number
	echo
	exit 1
else
	VERSION=${2}
fi

source ~/.skel/bin/wpinit ${@}
echo

# push svn and do WordPress release
cd ~/code/svn.wordpress

if [[ ! -e ${PLUGIN} ]]
then
	svn co http://plugins.svn.wordpress.org/${PLUGIN} || { echo "Unable to 'svn co'"; exit 1; }

	if [[ ! -e ${PLUGIN} ]]
	then
		echo No code directory for code/svn.wordpress
		exit 1
	fi
fi

cd ${PLUGIN}
svn cleanup . || { echo "Unable to 'svn cleanup'"; exit 1; }
svn up --force || { echo "Unable to 'svn up --force'"; exit 1; }
git clone git@github.com:michael-cannon/${PLUGIN}.git || { echo "Unable to 'git clone'"; exit 1; }

cd ${PLUGIN}
git checkout ${VERSION} || exit 1;

for DIR in ${NON_SVN_DIRS}
do
	find . -type d -name ${DIR} -exec rm -rf {} \;
done
for FILE in ${NON_SVN_FILES}
do
	find . -type f -name ${FILE} -exec rm {} \;
done
cd ..

cp -r ${PLUGIN}/* trunk/.

cd trunk
svn add *

cd ..
rm -rf ${PLUGIN}

if [[ ! -d "tags/${VERSION}" ]]
then
	svn cp trunk tags/${VERSION}
	svn ci -m "Release version ${VERSION}" || { echo "Unable to 'svn ci'"; exit 1; }
	svn status
else
	echo
	echo Manually merge SVN files
	echo "cd ~/code/svn.wordpress/${PLUGIN}"
	echo "cp -r trunk/* tags/${VERSION}/."
	echo "svn add trunk/* tags/${VERSION}"
	echo "svn ci -m \"Release version ${VERSION}\""
	echo "svn status"
	echo
fi